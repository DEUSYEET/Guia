{"version":3,"sources":["tools.js","components/guidePreview.jsx","pages/Home.jsx","pages/Guide.jsx","components/fileUpload.jsx","pages/CreateGuide.jsx","App.js","serviceWorker.js","index.js"],"names":["exports","getVidID","url","cleanUrl","replace","trim","includes","split","tools","require","GuidePreview","guide","props","video","videoThumbnail","className","this","image","src","alt","title","author","description","role","aria-label","scoreUp","scoreDown","Component","Home","state","guides","fetch","then","res","json","data","setState","console","log","getAll","id","map","to","guideID","key","Guide","URLSearchParams","location","search","get","guideHead","guideSections","getSections","videoId","section","_id","FileUpload","file","onChooseFile","evt","target","files","onUploadFile","FormData","append","name","axios","post","handler","type","accept","onChange","onClick","CreateGuide","onSaveGuide","formData","JSON","stringify","onAddHeadImg","prevState","Location","placeholder","e","value","App","test","homeLinks","path","render","Hide","hide","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f5d4d530.chunk.js","sourcesContent":["exports.getVidID = url=> {\r\n    let cleanUrl = url.replace(\"https://\",\"\").trim();\r\n\r\n    if(cleanUrl.includes(\"youtu.be\")){\r\n       let splitUrl = cleanUrl.split(\"/\")\r\n        return(splitUrl[1])\r\n    } else {\r\n      let splitUrl = cleanUrl.split(\"?v=\")\r\n      let cleanSplitUrl = splitUrl[1].split(\"&\");\r\n      return(cleanSplitUrl[0])\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nconst tools = require(\"../tools\");\r\n\r\nclass GuidePreview extends Component {\r\n  guide = this.props.guide;\r\n  url = this.guide.video;\r\n  videoThumbnail = (this.url ? (\"https://img.youtube.com/vi/\" + tools.getVidID(this.url) + \"/0.jpg\") : \"\");\r\n\r\n    \r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"guidePreview\">\r\n        {!this.guide.image && this.url && (\r\n          <div className=\"guidePreviewImgBox\">\r\n            <img\r\n              className=\"guidePreviewImg\"\r\n              src={this.videoThumbnail}\r\n              alt={this.guide.title}\r\n            ></img>\r\n          </div>\r\n        )}\r\n        {this.guide.image && (\r\n          <div className=\"guidePreviewImgBox\">\r\n            <img\r\n              className=\"guidePreviewImg\"\r\n              src={this.guide.image}\r\n              alt={this.guide.title}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"guidePreviewContent\">\r\n          <div className=\"guidePreviewTitle\">{this.guide.title}</div>\r\n          <div className=\"guidePreviewAuthor\">{this.guide.author || \"Anonymous\"}</div>\r\n          <div className=\"guidePreviewDesc\">{this.guide.description}</div>\r\n          <div className=\"guidePreviewScore\"> <span role=\"img\" aria-label=\"up\">üëç</span>{this.guide.scoreUp || 0} /<span role=\"img\" aria-label=\"down\"> üëé</span>{this.guide.scoreDown || 0}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GuidePreview;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GuidePreview from \"../components/guidePreview\";\r\n\r\n// let url = \"http://localhost:8080/getAll\";\r\nlet url = \"http://guiabackend-env.eba-u9xxwbnm.us-west-1.elasticbeanstalk.com/getAll\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    guides: [],\r\n  };\r\n\r\n  getAll() {\r\n    // console.log(url)\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        this.setState({\r\n          guides: data,\r\n        });\r\n        console.log(this.state.guides);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAll();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"homePage\">\r\n        <div id=\"homeTitle\">Featured Guides</div>\r\n        <div id=\"homeGuideContainer\">\r\n          {this.state.guides.map((guide) => (\r\n            <Link to={\"/guide?guideID=\" + guide.guideID} key={guide.guideID}>\r\n            <GuidePreview guide={guide} />\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nconst tools = require(\"../tools\");\r\n\r\nclass Guide extends Component {\r\n  id = new URLSearchParams(this.props.location.search).get(\"guideID\");\r\n\r\n  // url = \"http://localhost:8080/getGuide?guideId=\" + this.id;\r\n  url = \"http://guiabackend-env.eba-u9xxwbnm.us-west-1.elasticbeanstalk.com/getGuide?guideId=\" + this.id;\r\n\r\n  state = {\r\n    guideHead: {},\r\n    guideSections: [],\r\n  };\r\n\r\n  getSections() {\r\n    console.log(this.url);\r\n    fetch(this.url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        this.setState({\r\n          guideHead: data[0],\r\n          guideSections: data[1],\r\n        });\r\n        console.log(this.state);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSections();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"guide\">\r\n        <div id=\"guideHead\">\r\n          <div id=\"guideTile\">{this.state.guideHead.title}</div>\r\n\r\n          {!this.state.guideHead.image && this.state.guideHead.video && (\r\n            <YouTube\r\n              id=\"guideHeadVideo\"\r\n              videoId={tools.getVidID(this.state.guideHead.video)}\r\n            ></YouTube>\r\n          )}\r\n          {this.state.guideHead.image && (\r\n            <img\r\n              id=\"guideHeadImg\"\r\n              src={this.state.guideHead.image}\r\n              alt={this.state.guideHead.title}\r\n            />\r\n          )}\r\n\r\n          <div id=\"guideHeadDesc\">{this.state.guideHead.description}</div>\r\n        </div>\r\n\r\n        <div id=\"guideSectionContainer\">\r\n          {this.state.guideSections.map((section) => (\r\n            <div className=\"guideSection\" key={section._id}>\r\n\r\n              <div className=\"guideSectionTile\">{section.title}</div>\r\n\r\n              {!section.image && section.video && (\r\n                <YouTube\r\n                  className=\"guideSectionVideo\"\r\n                  videoId={tools.getVidID(section.video)}\r\n                ></YouTube>\r\n              )}\r\n              {section.image && (\r\n                <img\r\n                  className=\"guideSectionImg\"\r\n                  src={section.image}\r\n                  alt={section.title}\r\n                />\r\n              )}\r\n\r\n              <div className=\"guideSectionDesc\">{section.description}</div>\r\n\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Guide;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass FileUpload extends Component {\r\n  // url = \"http://localhost:8080/uploadImage\";\r\n  url = \"http://guiabackend-env.eba-u9xxwbnm.us-west-1.elasticbeanstalk.com/uploadImage\";\r\n\r\n  state = {\r\n    file: null,\r\n  };\r\n\r\n  onChooseFile = (evt) => {\r\n    this.setState({\r\n      file: evt.target.files[0],\r\n    });\r\n  };\r\n\r\n  onUploadFile = () => {\r\n    let file = new FormData();\r\n    file.append(\"file\",this.state.file,this.state.file.name)\r\n    axios.post(this.url,file).then(res=>{\r\n        this.props.handler(res);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fileUpload\">\r\n        <input type=\"file\" accept=\"image\" onChange = {this.onChooseFile}></input>\r\n        <button onClick={this.onUploadFile}>Submit</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FileUpload;\r\n","import React, { Component, useEffect } from \"react\";\r\nimport FileUpload from \"../components/fileUpload\";\r\nimport axios from \"axios\";\r\n\r\nclass guideHead {\r\n  constructor() {\r\n    this.guideID = \"\";\r\n    this.author = \"\";\r\n    this.title = \"\";\r\n    this.description = \"\";\r\n    this.image = \"\";\r\n    this.video = \"\";\r\n    this.scoreUp = 0;\r\n    this.scoreDown = 0;\r\n  }\r\n}\r\n\r\n// class guideSection {\r\n//   constructor() {\r\n//     this.guideID = null;\r\n//     this.title = null;\r\n//     this.description = null;\r\n//     this.image = null;\r\n//     this.video = null;\r\n//   }\r\n// }\r\n\r\nclass CreateGuide extends Component {\r\n//   url = \"http://localhost:8080/uploadGuideHead\";\r\n  url = \"http://guiabackend-env.eba-u9xxwbnm.us-west-1.elasticbeanstalk.com/uploadGuideHead\";\r\n\r\n  state = {\r\n    guideHead: new guideHead(),\r\n    guideSections: [],\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  //   scrollOnMount = () =>{\r\n  //     useEffect (()=>{\r\n  //         window.scrollTo(0,0)\r\n  //       },[])\r\n  //   }\r\n\r\n  onSaveGuide = () => {\r\n    console.log(this.state.guideHead);\r\n    let formData = new FormData();\r\n    formData.append(\"file\", JSON.stringify(this.state.guideHead));\r\n    axios.post(this.url, formData).then((res) => {\r\n      // this.props.handler(res);\r\n    });\r\n  };\r\n\r\n  onAddHeadImg = (res) => {\r\n    // console.log(res.data.Location);\r\n    // console.log(res.data.Location);\r\n\r\n    this.setState((prevState) => ({\r\n      guideHead: {\r\n        ...prevState.guideHead,\r\n        image: res.data.Location,\r\n      },\r\n    }));\r\n\r\n    console.log(this.state.guideHead);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"guideCreator\">\r\n        <div id=\"guideCreatorHead\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"guideCreatorHeadInput\"\r\n            placeholder=\"Title\"\r\n            onChange={(e) => {\r\n              let title = e.target.value;\r\n              this.setState((prevState) => ({\r\n                guideHead: {\r\n                  ...prevState.guideHead,\r\n                  title: title,\r\n                },\r\n              }));\r\n            }}\r\n          ></input>\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"guideCreatorHeadInput\"\r\n            placeholder=\"Description\"\r\n            onChange={(e) => {\r\n              let description = e.target.value;\r\n              this.setState((prevState) => ({\r\n                guideHead: {\r\n                  ...prevState.guideHead,\r\n                  description: description,\r\n                },\r\n              }));\r\n            }}\r\n          ></textarea>\r\n          <div className=\"guideCreatorHeadAddImage\">\r\n            <p>[Optional] Add Image</p>\r\n            <p></p>\r\n            <FileUpload handler={this.onAddHeadImg} />\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <button onClick={this.onSaveGuide}>Save</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CreateGuide;\r\n","import \"./App.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./pages/Home.jsx\";\r\nimport Guide from \"./pages/Guide\";\r\nimport CreateGuide from './pages/CreateGuide'\r\n\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    test: true,\r\n  };\r\n\r\n  hide(e) {\r\n    this.setState({\r\n      homeLinks: true,\r\n    });\r\n  }\r\n\r\n  // //RESET STATE ON BACK\r\n  // //or on load ... i think?\r\n  // componentDidMount(){\r\n  //   window.onpopstate = () =>{\r\n  //     this.setState({\r\n  //       test:true\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"container\">\r\n        <div id=\"mainSidebar\">\r\n          <Link to=\"/\">\r\n            <img src=\"./assets/GuiaLogo1.svg\" alt=\"Logo\" id=\"mainLogo\"></img>\r\n          </Link>\r\n          <Link to=\"/createGuide\">\r\n            <div className=\"sidebarButton\">Create Guide</div>\r\n          </Link>\r\n        </div>\r\n        <div id=\"mainContainer\">\r\n          <Switch>\r\n            {/* <Route\r\n              path=\"/testUpload\"\r\n              render={(props) => <FileUpload {...props}></FileUpload>}\r\n            ></Route> */}\r\n\r\n            <Route\r\n              path=\"/createGuide\"\r\n              render={(props) => <CreateGuide {...props}></CreateGuide>}\r\n            ></Route>\r\n            <Route\r\n              path=\"/guide\"\r\n              render={(props) => <Guide {...props}></Guide>}\r\n            ></Route>\r\n\r\n            <Route\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home {...props} Hide={(e) => this.hide(e)}></Home>\r\n              )}\r\n            ></Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// import { Router } from 'react-router-dom';\r\nimport { BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}